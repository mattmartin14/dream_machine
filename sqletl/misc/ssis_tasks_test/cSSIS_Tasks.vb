Imports Microsoft.SqlServer.Dts.Runtime
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Pipeline.ScriptComponent
Imports System.Text
Imports System.IO
Class cSSIS_Tasks

    Structure ssis_tasks
        Const data_flow_task As String = "STOCK:PIPELINETASK"
        Const exec_sql_task As String = "STOCK:SQLTASK"
        Const script_task As String = "STOCK:SCRIPTTASK"
    End Structure

    'Structure ssis_tasks
    '    Const data_flow_task As String = "STOCK:PIPELINETASK"
    '    Const exec_sql_task As String = "STOCK:EXECUTESQLTASK"
    'End Structure

    Shared Sub main()
        dft_with_row_id()
    End Sub

    Shared Sub dft_with_row_id()


        'this is a big one...going to try and add a script task at run time!!!
        Dim pkg As New Microsoft.SqlServer.Dts.Runtime.Package
        pkg.Name = "EDIS Data Transfer"

        pkg.ProtectionLevel = Microsoft.SqlServer.Dts.Runtime.DTSProtectionLevel.DontSaveSensitive

        pkg.Description = "Copyright © " + Now.Year.ToString + " MD Data Technologies, LLC"

        Dim desc As String = <![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="151,42"
          Id="Package\Data Flow Task"
          TopLeft="5.5,12.5" />
        <AnnotationLayout
          Text="COPYRIGHT © {COPYRIGHT_YEAR}, MD Data Technologies, LLC&#xA;"
          ParentId="Package"
          Size="376,58"
          Id="c27b8b40-99de-4301-a1e8-92d4f91eb911"
          TopLeft="247,72.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FF000000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="This package was autogenerated by EDIS with the following information:&#xD;&#xA;[1] Create Date: {PKG_CREATE_TS}&#xD;&#xA;[2] User: {USER_ID}&#xD;&#xA;[3] Machine Name: {MACHINE_NAME}"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="412,88"
          Id="9462da34-894c-492e-b6f5-a9310076f9e7"
          TopLeft="252,117" />
        <AnnotationLayout
          Text="For more information, visit www.sqletl.com&#xA;"
          ParentId="Package"
          Size="341,58"
          Id="7523358a-d4e4-4c9d-a6b6-7dd136114ab8"
          TopLeft="248.5,223">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FF000000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]>.Value

        'desc = Replace(desc, "{PKG_ID}", pkg.ID.ToString)
        desc = Replace(desc, "{PKG_CREATE_TS}", Now.ToUniversalTime + " UTC")
        desc = Replace(desc, "{COPYRIGHT_YEAR}", Now.Year.ToString)
        desc = Replace(desc, "{MACHINE_NAME}", System.Environment.MachineName.ToString)
        desc = Replace(desc, "{USER_ID}", System.Environment.UserName.ToString)

        pkg.DesignTimeProperties = desc




        Dim pkg_app As New Microsoft.SqlServer.Dts.Runtime.Application

        Dim src_cn As Microsoft.SqlServer.Dts.Runtime.ConnectionManager = pkg.Connections.Add("OLEDB")
        src_cn.ConnectionString = "Provider=SQLOLEDB; Data Source = MDDT\DEV16; Integrated Security = SSPI"
        src_cn.Name = "Source Connection"


        '--------------------------------------------------------------------------------------
        'add data flow task

        Dim df_task_exe As Executable = pkg.Executables.Add("STOCK:PIPELINETASK")
        Dim tHost_df_task As Microsoft.SqlServer.Dts.Runtime.TaskHost = CType(df_task_exe, Microsoft.SqlServer.Dts.Runtime.TaskHost)
        Dim df_task As MainPipe = CType(tHost_df_task.InnerObject, MainPipe)
        tHost_df_task.Name = "Data Flow Task"
        tHost_df_task.DelayValidation = True

        '--------------------------------------------------------------------------------------
        'add data flow source
        Dim df_src_comp As IDTSComponentMetaData100 = df_task.ComponentMetaDataCollection.[New]
        df_src_comp.ComponentClassID = pkg_app.PipelineComponentInfos("OLE DB Source").CreationName
        'df_src_comp.Name = "Data Flow OLEDB Source"

        Dim src_inst As CManagedComponentWrapper = df_src_comp.Instantiate()
        src_inst.ProvideComponentProperties()
        df_src_comp.RuntimeConnectionCollection(0).ConnectionManagerID = pkg.Connections("Source Connection").ID
        df_src_comp.RuntimeConnectionCollection(0).ConnectionManager = DtsConvert.GetExtendedInterface(pkg.Connections("Source Connection"))

        src_inst.SetComponentProperty("AccessMode", 2) '2 is sqlcommand, 1 is table name or view name, 3 is Table or View Fast
        src_inst.SetComponentProperty("SqlCommand", "SELECT FirstName, LastName From adventureworks.person.person")

        src_inst.AcquireConnections(Nothing)
        src_inst.ReinitializeMetaData()
        src_inst.ReleaseConnections()

        df_src_comp.Name = "EDIS - OLEDB Source"

        '--------------------------------------------------------------------------------------
        'add row id via script transformation

        'set the script task component meta data
        Dim row_id_script_tsfm_CMDT As IDTSComponentMetaData100 = df_task.ComponentMetaDataCollection.[New]()
        row_id_script_tsfm_CMDT.ComponentClassID = pkg_app.PipelineComponentInfos("Script Component").CreationName
        'row_id_script_tsfm_CMDT.Instantiate()
        'row_id_script_tsfm_CMDT.Name = "Add Row ID"

        'set the component wrapper
        Dim rid_script_wrapper As CManagedComponentWrapper = row_id_script_tsfm_CMDT.Instantiate()
        rid_script_wrapper.ProvideComponentProperties()

        'Attach the data flow source to the script tsfm
        df_task.PathCollection.[New]().AttachPathAndPropagateNotifications(df_src_comp.OutputCollection(0), row_id_script_tsfm_CMDT.InputCollection(0))

        'Map the input columns as read only
        Dim script_input As IDTSInput100 = row_id_script_tsfm_CMDT.InputCollection(0)
        Dim script_vInput As IDTSVirtualInput100 = script_input.GetVirtualInput

        For Each vCol As IDTSVirtualInputColumn100 In script_vInput.VirtualInputColumnCollection
            rid_script_wrapper.SetUsageType(script_input.ID, script_vInput, vCol.LineageID, DTSUsageType.UT_READONLY)
        Next

        'add the edis row id as an output
        Dim outputColl_id As String = row_id_script_tsfm_CMDT.OutputCollection(0).ID.ToString
        rid_script_wrapper.InsertOutputColumnAt(outputColl_id, 0, "EDIS_SRC_ROW_ID", "EDIS Source Row ID")
        Dim edis_src_row_id_marker As String = row_id_script_tsfm_CMDT.OutputCollection(0).OutputColumnCollection.Item(0).ID

        'update to bigint
        rid_script_wrapper.SetOutputColumnDataTypeProperties(outputColl_id, edis_src_row_id_marker, DataType.DT_I8, 0, 0, 0, 0)

        'set script language
        rid_script_wrapper.SetComponentProperty("ScriptLanguage", "VisualBasic")

        'set the vb code

        Dim vb_script As String = ""

        vb_script += vbCrLf + vbCrLf
        vb_script += "'***************************************************************************************" + vbCrLf
        vb_script += "'This code was generated by EDIS for purposes of tracking the source row ID. " + vbCrLf
        vb_script += "'For more information, visit www.sqletl.com " + vbCrLf
        vb_script += "'***************************************************************************************" + vbCrLf
        vb_script += vbCrLf + vbCrLf

        vb_script += "Imports System" + vbCrLf
        vb_script += "Imports System.Data" + vbCrLf
        vb_script += "Imports System.Math" + vbCrLf
        vb_script += "Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper" + vbCrLf
        vb_script += "Imports Microsoft.SqlServer.Dts.Runtime.Wrapper" + vbCrLf
        vb_script += vbCrLf
        vb_script += "<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute> _" + vbCrLf
        vb_script += "  <CLSCompliant(False)> _ " + vbCrLf
        vb_script += "Public Class ScriptMain" + vbCrLf
        vb_script += "      Inherits UserComponent" + vbCrLf
        vb_script += vbCrLf
        vb_script += "      Private row_id As Long" + vbCrLf
        vb_script += "      Public Overrides Sub PreExecute()" + vbCrLf
        vb_script += "          MyBase.PreExecute()" + vbCrLf
        vb_script += "          row_id = 0" + vbCrLf
        vb_script += "      End Sub" + vbCrLf
        vb_script += vbCrLf
        vb_script += "      Public Overrides Sub PostExecute()" + vbCrLf
        vb_script += "          MyBase.PostExecute()" + vbCrLf
        vb_script += "      End Sub" + vbCrLf
        vb_script += vbCrLf
        vb_script += "      Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)" + vbCrLf
        vb_script += "          row_id += 1" + vbCrLf
        vb_script += "          Row.EDISSRCROWID = row_id" + vbCrLf
        vb_script += "      End Sub" + vbCrLf
        vb_script += vbCrLf
        vb_script += "End Class" + vbCrLf

        'isolate the inner component
        Dim scriptComp As Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost = TryCast(TryCast(rid_script_wrapper, IDTSManagedComponent100).InnerObject, Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost)

        scriptComp.Initialize()

        'note: create and save the project first, then "put"/replace the existing main code
        scriptComp.CreateNewProject("edisRowTracker", True, True)
        scriptComp.SaveScriptProject()
        scriptComp.PutSourceCode("main.vb", "UTF8", vb_script)

        row_id_script_tsfm_CMDT.Name = "EDIS - Add Source Row ID"


        'add another code file for testing
        'adding an additional class DOES NOT WORK
        Dim vb1 As String = "class test " + vbCrLf
        vb1 += "    Sub blah" + vbCrLf
        vb1 += "    'comment " + vbCrLf
        vb1 += "        dim i as string = ""abc""" + vbCrLf
        vb1 += "    end Sub" + vbCrLf
        vb1 += "end class"

        scriptComp.PutSourceCode("My Project\test.vb", "UTF8", vb1)

        'recompile the code so that the binary updates

        scriptComp.ShowIDE()
        scriptComp.SaveScriptProject()
        scriptComp.CloseIDE()

        '---------------    
        'save

        Dim save_path As String = "C:\temp\pkg_dft_with_ridaa.dtsx"

        If IO.File.Exists(save_path) Then IO.File.Delete(save_path)

        pkg_app.SaveToXml(save_path, pkg, Nothing)

    End Sub

    'Function HexStringToBinary(ByVal hexString As String) As String
    '    Dim num As Integer = Integer.Parse(hexString, NumberStyles.HexNumber)
    '    Return Convert.ToString(num, 2)
    'End Function

    Shared Sub exec_sql_with_dft()
        Dim pre_sql_cmd As String = Form1.get_edis_pval("pre_sql_cmd")

        Dim pkg As New Microsoft.SqlServer.Dts.Runtime.Package
        pkg.Name = "adhoc"

        '---------------------------------------------------------------------------------------------
        'SET CONNECTIONS

        Dim src_cn As Microsoft.SqlServer.Dts.Runtime.ConnectionManager = pkg.Connections.Add("OLEDB")
        src_cn.ConnectionString = "Provider=SQLOLEDB; Data Source = MDDT\DEV16; Integrated Security = SSPI"
        src_cn.Properties("RetainSameConnection").SetValue(src_cn, "True")
        src_cn.Name = "source connection"


        '---------------------------------------------------------------------------------------------
        'Add Pre-Execute SQL Task
        Dim pre_exec_sql_task_exe As Executable = pkg.Executables.Add("STOCK:SQLTASK")

        Dim tHost_pre_exec_sql_task As Microsoft.SqlServer.Dts.Runtime.TaskHost = CType(pre_exec_sql_task_exe, Microsoft.SqlServer.Dts.Runtime.TaskHost)

        With tHost_pre_exec_sql_task
            .DelayValidation = True
            .Name = "Pre Exec SQL Task"
            .Properties("Connection").SetValue(tHost_pre_exec_sql_task, src_cn.ID)
            .Properties("SqlStatementSource").SetValue(tHost_pre_exec_sql_task, pre_sql_cmd)
            'cannot set it here, requires the sql statement source type which can only be brought in if i create a reference to the lib
            'it defaults to directIntput which is what we want
            '.Properties("SqlStatementSourceType").SetValue(tHost_pre_exec_sql_task, 0)
            .Properties("TimeOut").SetValue(tHost_pre_exec_sql_task, CUInt(0))
        End With

        '--------------------------------------------------------------------------------------------
        'Add Data Flow Task and connect the exec sql task to it

        Dim df_task_exe As Executable = pkg.Executables.Add("STOCK:PIPELINETASK")
        Dim tHost_df_task As Microsoft.SqlServer.Dts.Runtime.TaskHost = CType(df_task_exe, Microsoft.SqlServer.Dts.Runtime.TaskHost)
        Dim df_task As MainPipe = CType(tHost_df_task.InnerObject, MainPipe)
        tHost_df_task.Name = "Data Flow Task"
        tHost_df_task.DelayValidation = True

        'connect exec sql task to dft task
        pkg.PrecedenceConstraints.Add(pre_exec_sql_task_exe, df_task_exe)


        '-------------------------------------------------------------------------------------------
        'SAVE Package

        Dim save_path As String = "C:\temp\pkg_esql.dtsx"

        If IO.File.Exists(save_path) Then IO.File.Delete(save_path)


        Dim pkg_app As New Microsoft.SqlServer.Dts.Runtime.Application
        pkg_app.SaveToXml(save_path, pkg, Nothing)
    End Sub




End Class
